name: Infrastructure
on:
  workflow_dispatch:
    inputs: { }
  push:
    branches:
      - Azure
    paths:
      - 'terraform/**'
      - 'azure/builder.json'
      - 'azure/routes/**'
env:
  SPRING_CLOUD_SERVICE: ${{ secrets.TF_PROJECT_NAME }}-asc
  RESOURCE_GROUP: ${{ secrets.TF_PROJECT_NAME }}-resources
  WORKSPACE_NAME: ${{ secrets.TF_PROJECT_NAME }}-workspace
  CUSTOM_BUILDER: no-bindings-builder
  CART_SERVICE_APP: cart-service
  IDENTITY_SERVICE_APP: identity-service
  ORDER_SERVICE_APP: order-service
  PAYMENT_SERVICE_APP: payment-service
  CATALOG_SERVICE_APP: catalog-service
  FRONTEND_APP: frontend
  ORDER_SERVICE_DB_CONNECTION: order_service_db
  ORDER_SERVICE_DB: acmefit_order
  CATALOG_SERVICE_DB_CONNECTION: catalog_service_db
  CATALOG_SERVICE_DB: acmefit_catalog
  CART_SERVICE_CACHE_CONNECTION: cart_service_cache
  AZURE_CACHE_NAME: ${{ secrets.TF_PROJECT_NAME }}-redis
  POSTGRES_SERVER: ${{ secrets.TF_PROJECT_NAME }}-db-server
  POSTGRES_SERVER_USER: ${{ secrets.POSTGRES_SERVER_USER }}
  POSTGRES_SERVER_PASSWORD: ${{ secrets.POSTGRES_SERVER_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v3
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Format
        run: terraform fmt -check
      - name: Terraform Init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Plan
        id: plan
        continue-on-error: true
        run: |
          terraform plan -input=false \
            -var "project_name=${{ secrets.TF_PROJECT_NAME}}" \
            -var "resource_group_location=${{ secrets.AZURE_LOCATION }}" \
            -var "dbadmin=${{ secrets.POSTGRES_SERVER_USER }}" \
            -var "dbpassword=${{ secrets.POSTGRES_SERVER_PASSWORD }}"
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -input=false \
            -var "project_name=${{ secrets.TF_PROJECT_NAME}}" \
            -var "resource_group_location=${{ secrets.AZURE_LOCATION }}" \
            -var "dbadmin=${{ secrets.POSTGRES_SERVER_USER }}" \
            -var "dbpassword=${{ secrets.POSTGRES_SERVER_PASSWORD }}"
      - name: Set up Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set up Azure Spring Extension
        run: az extension add --name spring-cloud
      - name: Create Azure Spring Apps
        run: ../.github/scripts/spring-cloud.sh
        env:
          RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
          REGION: ${{ secrets.AZURE_LOCATION }}
          SPRING_CLOUD_SERVICE: ${{ env.SPRING_CLOUD_SERVICE }}
      - name: Configure diagnostic settings
        run: ../.github/scripts/diagnostic.sh
        env:
          RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
          SPRING_CLOUD_SERVICE: ${{ env.SPRING_CLOUD_SERVICE }}
          WORKSPACE_NAME: ${{ env.WORKSPACE_NAME }}
      - name: Configure Application Configuration Service
        run: ../.github/scripts/application-configuration-service.sh
        env:
          RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
          SPRING_CLOUD_SERVICE: ${{ env.SPRING_CLOUD_SERVICE }}
      - name: Configure Tanzu Build Service
        working-directory: azure
        run: ../.github/scripts/build-service.sh
        env:
          RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
          SPRING_CLOUD_SERVICE: ${{ env.SPRING_CLOUD_SERVICE }}
          CUSTOM_BUILDER: ${{ env.CUSTOM_BUILDER }}
      - name: Create applications in Azure Spring Cloud
        run: ../.github/scripts/apps.sh
        env:
          RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
          SPRING_CLOUD_SERVICE: ${{ env.SPRING_CLOUD_SERVICE }}
          CART_SERVICE_APP: ${{ env.CART_SERVICE_APP }}
          ORDER_SERVICE_APP: ${{ env.ORDER_SERVICE_APP }}
          PAYMENT_SERVICE_APP: ${{ env.PAYMENT_SERVICE_APP }}
          CATALOG_SERVICE_APP: ${{ env.CATALOG_SERVICE_APP }}
          FRONTEND_APP: ${{ env.FRONTEND_APP }}
      - name: Bind to Application Configuration Service
        run: |
          az spring-cloud application-configuration-service bind --app ${PAYMENT_SERVICE_APP}
          az spring-cloud application-configuration-service bind --app ${CATALOG_SERVICE_APP}
      - name: Bind to Service Registry
        run: |
          az spring-cloud application-configuration-service bind --app ${PAYMENT_SERVICE_APP}
          az spring-cloud application-configuration-service bind --app ${CATALOG_SERVICE_APP}
      - name: Create Service Connectors
        run: ../.github/scripts/service-connectors.sh
        env:
          RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
          SPRING_CLOUD_SERVICE: ${{ env.SPRING_CLOUD_SERVICE }}
          ORDER_SERVICE_DB_CONNECTION: ${{ env.ORDER_SERVICE_DB_CONNECTION }}
          ORDER_SERVICE_APP: ${{ env.ORDER_SERVICE_APP }}
          ORDER_SERVICE_DB: ${{ env.ORDER_SERVICE_DB }}
          CATALOG_SERVICE_DB_CONNECTION: ${{ env.CATALOG_SERVICE_DB_CONNECTION }}
          CATALOG_SERVICE_APP: ${{ env.CATALOG_SERVICE_APP }}
          CATALOG_SERVICE_DB: ${{ env.CATALOG_SERVICE_DB }}
          CART_SERVICE_CACHE_CONNECTION: ${{ env.CART_SERVICE_CACHE_CONNECTION }}
          CART_SERVICE_APP: ${{ env.CART_SERVICE_APP }}
          AZURE_CACHE_NAME: ${{ env.AZURE_CACHE_NAME }}
          POSTGRES_SERVER: ${{ env.POSTGRES_SERVER }}
          POSTGRES_SERVER_USER: ${{ env.POSTGRES_SERVER_USER }}
          POSTGRES_SERVER_PASSWORD: ${{ env.POSTGRES_SERVER_PASSWORD }}
      - name: Configure Spring Cloud Gateway
        working-directory: azure/routes
        run: ../../.github/scripts/gateway.sh
        env:
          RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
          SPRING_CLOUD_SERVICE: ${{ env.SPRING_CLOUD_SERVICE }}
          CART_SERVICE_APP: ${{ env.CART_SERVICE_APP }}
          ORDER_SERVICE_APP: ${{ env.ORDER_SERVICE_APP }}
          CATALOG_SERVICE_APP: ${{ env.CATALOG_SERVICE_APP }}
          FRONTEND_APP: ${{ env.FRONTEND_APP }}