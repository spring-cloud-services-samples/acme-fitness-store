// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using acme_order.Db;
using acme_order.Models;

namespace acmeorder.Migrations
{
    [DbContext(typeof(OrderContext))]
    [Migration("20220411205517_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:PostgresExtension:uuid-ossp", ",,")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("acme_order.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<Address>("Address")
                        .HasColumnName("address")
                        .HasColumnType("json");

                    b.Property<Card>("Card")
                        .HasColumnName("card")
                        .HasColumnType("json");

                    b.Property<List<Cart>>("Cart")
                        .HasColumnName("cart")
                        .HasColumnType("json");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date")
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValue(new DateTime(2022, 4, 11, 20, 55, 17, 183, DateTimeKind.Utc).AddTicks(7920));

                    b.Property<string>("Delivery")
                        .HasColumnName("delivery")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Firstname")
                        .HasColumnName("firstname")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Lastname")
                        .HasColumnName("lastname")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Paid")
                        .HasColumnName("paid")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Total")
                        .HasColumnName("total")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("order");
                });
#pragma warning restore 612, 618
        }
    }
}
